/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectoop;

import DbConnection.ConectionDB;
import getterSetter.UpdateItemGetSet;

import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.HashMap;
import javax.swing.JOptionPane;
import java.util.regex.*;
import javax.swing.*;
import java.util.regex.Pattern;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
/**
 *
 * @author ksama
 */
public class UPDATEItem extends javax.swing.JFrame {

   public String numberPattern = "^[0-9]*$"; 
   
    Connection con = null;
    PreparedStatement pst = null;
    /**
     * Creates new form UPDATEItem
     */
    public UPDATEItem() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        productsearchIdTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        productNameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        categoryTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        qtyTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        brandNameTxt = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        addQtyBtn = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        priceTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 34)); // NOI18N
        jLabel2.setText("Stationary Management System");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("UPDATE Items");

        backBtn.setBackground(new java.awt.Color(87, 157, 10));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Product ID");

        productsearchIdTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        productsearchIdTxt.setPreferredSize(new java.awt.Dimension(64, 25));
        productsearchIdTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productsearchIdTxtActionPerformed(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        searchBtn.setText("SERACH");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Product Name");

        productNameTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        productNameTxt.setPreferredSize(new java.awt.Dimension(300, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Category");

        categoryTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        categoryTxt.setPreferredSize(new java.awt.Dimension(300, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Quantity");

        qtyTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qtyTxt.setPreferredSize(new java.awt.Dimension(300, 30));
        qtyTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTxtActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("BrandName");

        brandNameTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        brandNameTxt.setPreferredSize(new java.awt.Dimension(300, 30));
        brandNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandNameTxtActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(142, 190, 88));
        updateBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save.png"))); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        addQtyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addQtyBtnActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Price (Per Unit)");

        priceTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        priceTxt.setPreferredSize(new java.awt.Dimension(300, 30));
        priceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTxtActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Add Quantity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(252, 252, 252)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(336, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(574, 574, 574))
            .addGroup(layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(583, 583, 583))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addQtyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(qtyTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(categoryTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(productNameTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(productsearchIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(brandNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(updateBtn)
                            .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(searchBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(backBtn))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(productsearchIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(categoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(jLabel6))
                            .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(qtyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(addQtyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(155, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(brandNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:

        SellerDashboard sD = new SellerDashboard();
        sD.show();
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void qtyTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyTxtActionPerformed

    private void priceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTxtActionPerformed

    private void addQtyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addQtyBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addQtyBtnActionPerformed

    private void brandNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brandNameTxtActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        
        // search buuton code for search item:
        String uniqueId = productsearchIdTxt.getText();
        try{
            Statement st =ConectionDB.getCon().createStatement();
            ResultSet rs = st.executeQuery("select * from additems where productID = "+uniqueId+"");
            
            //retreive the data from database when serach bar search available Product Id
            if(rs.next()){
                productNameTxt.setText(rs.getString("productName"));
                categoryTxt.setText(rs.getString("Category"));
                qtyTxt.setText(rs.getString("Quantity"));
                brandNameTxt.setText(rs.getString("brandName"));
                priceTxt.setText(rs.getString("unitPrice"));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    
    }//GEN-LAST:event_searchBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        
        // assign text fields values to the new variables
        String productId = productsearchIdTxt.getText();
        String productName = productNameTxt.getText();
        String category = categoryTxt.getText();
        String unitPrice = priceTxt.getText();
        String quantity = qtyTxt.getText();
        String brandName = brandNameTxt.getText();
        String addQty = addQtyBtn.getText();
    
    

        
        //craete instance Update getters and setters class
        
        UpdateItemGetSet upDateItem = new UpdateItemGetSet();
        
        
        //set the values from Textfields for Setter methods
        
        upDateItem.setProductId(productId);
        upDateItem.setProductName(productName);
        upDateItem.setCategory(category);
        upDateItem.setAddQty(addQty);
        upDateItem.setQuantity(quantity);
        upDateItem.setUnitPrice(unitPrice);
        upDateItem.setBrandName(brandName);
        
        
        // Hash mapping 
        
        HashMap <String,UpdateItemGetSet> updateItemMap = new HashMap<>();
        
        
        //key for the hashmap value store
        String updateKey = null;
        
        // Put the item into the HashMap with a key, key is updateKey
        updateItemMap.put(updateKey, upDateItem);
        
        //retrieve the hashmap stord values using the hashmap key -> updateKey
        UpdateItemGetSet retrieveUpdateItem = updateItemMap.get(updateKey);
       
        //Assigning new virable the retrieved Getter values
        String productId2 = retrieveUpdateItem.getProductId();
        String productName2 =retrieveUpdateItem.getProductName();
        String category2 = retrieveUpdateItem.getCategory();
        String unitPrice2 = retrieveUpdateItem.getUnitPrice();
        String quantity2 = retrieveUpdateItem.getUnitPrice();
        String brandName2 = retrieveUpdateItem.getBrandName();
        String addQty2 = retrieveUpdateItem.getAddQty();
        


        
        //Calculat the total Qty if updating the quantity
        
        int totalQty = 0;
        
        if(addQty.equals("")){
            totalQty = Integer.parseInt(quantity);
            
        }else{
            totalQty = Integer.parseInt(quantity) + Integer.parseInt(addQty);
        }
        
        
        
        // check the vaildation for fieilds is empty or wrong
        
        if(productId2.equals("")){
            JOptionPane.showMessageDialog(null, "ProductId field is required.");
        }else if(productName2.equals("")){
            JOptionPane.showMessageDialog(null, "Name field is required.");
        }else if(category2.equals("")){
            JOptionPane.showMessageDialog(null, "Category field is admin or seller required.");
        }else if(unitPrice2.equals("")){
            JOptionPane.showMessageDialog(null, "Price per Units field is required.");
        }else if(!unitPrice2.matches(numberPattern)){
            JOptionPane.showMessageDialog(null, "Pice per unit field is invalid.");
        }else if(!addQty2.matches(numberPattern)){
            JOptionPane.showMessageDialog(null, "Add Quantity field is invalid.");
        }
        else{
            
            try{
                
                //get the database connection
                con = ConectionDB.getCon();
                
                // Prepare the SQL statement
                String query = "UPDATE additems SET productName=?, category=?, unitPrice=?, quantity=?, brandName=? where productId=?";
                pst = con.prepareStatement(query);
                PreparedStatement pst = con.prepareStatement(query);
            
                
                pst.setString(1, productName2);
                pst.setString(2, category2);
                pst.setString(3, unitPrice2);
                pst.setInt(4, totalQty);
                pst.setString(5, brandName2);
              
                pst.setInt(6, Integer.parseInt(productId2));
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Product Item Updated Successfully.");
                
                
                new UPDATEItem().setVisible(true);
                dispose();
                
                
            }catch(SQLException e){
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void productsearchIdTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productsearchIdTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productsearchIdTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UPDATEItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UPDATEItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UPDATEItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UPDATEItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UPDATEItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addQtyBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField brandNameTxt;
    private javax.swing.JTextField categoryTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JTextField productNameTxt;
    private javax.swing.JTextField productsearchIdTxt;
    private javax.swing.JTextField qtyTxt;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
